name: Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - { goos: linux, goarch: amd64, goamd64: v3, output: linux-amd64v3 }
          - { goos: linux, goarch: arm64, output: linux-arm64 }
          - { goos: windows, goarch: amd64, goamd64: v3, output: windows-amd64v3 }
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Get build info
        id: build-info
        run: |
          echo "commit-hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "build-time=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOAMD64: ${{ matrix.goamd64 }}
          CGO_ENABLED: 0
        run: |
          SUFFIX=""
          if [ "${{ matrix.goos }}" = "windows" ]; then
            SUFFIX=".exe"
          fi
          
          go build \
            -ldflags "-s -w -X 'douban-proxy/internal/version.GitCommit=${{ steps.build-info.outputs.commit-hash }}' -X 'douban-proxy/internal/version.BuildTime=${{ steps.build-info.outputs.build-time }}'" \
            -o "douban-proxy-${{ matrix.output }}${SUFFIX}" \
            main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: douban-proxy-${{ matrix.output }}
          path: douban-proxy-${{ matrix.output }}*
